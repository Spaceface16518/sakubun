body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

main {
    flex-grow: 1;
    position: relative;
}

a {
    color: #5ba0ea;
}

#settings {
    display: none;
    font-size: 1.5em;
    position: absolute;
    left: 50%;
    top: 50%;
    text-align: center;
    transform: translate(-50%, -50%);

    #range input {
        -moz-appearance: textfield;
        background: none;
        border: solid var(--foreground);
        border-width: 0 0 1px 0;
        color: var(--foreground);
        font-size: 1.5rem;
        text-align: center;
    }

    #range input:focus {
        border-color: var(--accent);
        outline: none;
    }
}

.warning {
    display: none;
    font-size: 1rem;
}

#quiz_container {
    display: none;
}

#quiz {
    border-radius: 5px;
    display: flex;
    align-items: center;
    flex-direction: column;
    padding: 2em;
    margin-top: 2em;
    text-align: center;
}

#meaning, #kana {
    font-size: 2em;
    height: 1em;
}

#question {
    font-size: 2.5em;
    margin: .5em 0;
}

#answer {
    border-bottom: 1px solid var(--foreground);
    color: var(--foreground);
    text-align: center;
}

// Fancy stuff to resize input based on content size
// Found the code on css-tricks.com
.input-sizer {
    display: inline-grid;
    vertical-align: top;
    align-items: center;
    position: relative;
    font-size: 2em;
    margin-bottom: .5em;

    &.stacked {
        padding: .5em;
        align-items: stretch;

        &::after, input {
            grid-area: 2 / 1;
        }
    }

    &::after, input {
        width: auto;
        min-width: 1em;
        grid-area: 1 / 2;
        font: inherit;
        padding: 0.25em;
        margin: 0;
        resize: none;
        background: none;
        appearance: none;
        border: none;
    }

    &::after {
        content: attr(data-value) ' ';
        visibility: hidden;
        white-space: pre-wrap;
    }

    &:focus-within {
        input:focus {
            outline: none;
        }
    }
}

#answer:focus {
    border-bottom: 2px solid var(--accent);
    padding-bottom: calc(.25em - 1px);
    outline: none;
}

#answer.correct {
    border-bottom-color: #43ef37;
    color: #43ef37;
}

#answer.incorrect {
    border-bottom-color: #ef374c;
    color: var(--error);
}

// Checkbox

// Customize the label (the container)
.container {
    cursor: pointer;
    display: block;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    // Hide the browser's default checkbox
    input {
        opacity: 0;
        cursor: pointer;
        height: 0;
        width: 0;
    }

    // Create a custom checkbox
    .checkmark {
        background-color: var(--foreground);
        border-radius: 5px;
        position: absolute;
        height: 1em;
        width: 1em;
    }
}

.container:hover input ~ .checkmark {
    background-color: var(--foreground-dark);
}

.container input:checked ~ .checkmark {
    background-color: var(--accent);
}

// Create the checkmark/indicator (hidden when not checked)
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

// Show the checkmark when checked
.container input:checked ~ .checkmark:after {
    display: block;
}

// Style the checkmark/indicator
.container .checkmark:after {
    left: 9px;
    top: 4px;
    width: 5px;
    height: 11px;
    border: solid var(--background);
    border-width: 0 2px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}
